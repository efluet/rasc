filter(!is.na(gwo))
unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])
print(gwo_class)
# Create empty output
gwo_out <- rast()
print(gwo_class)
# Create empty output
gwo_out <- rast()
# Loop through GLWDv2 classes
for (glwd2_class in unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])){
print(paste0('  |-> ', glwd2_class))
# file name
fname <- paste0('../data/GLWDv2/grids/GLWD_v2_delta_area_by_class_ha_tif/GLWD_v2_delta_area_by_class_ha/GLWD_v2_delta_class_', gwo_class, '_ha_x10.tif')
# Append to stack
gwo_out <- c(gwo_out, rast(fname))
}
?calc
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T)
gwo_out
plot(gwo_out)
print(gwo_class)
# Create empty output
gwo_out <- rast()
# Loop through GLWDv2 classes
for (glwd2_class in unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])){
print(paste0('  |-> ', glwd2_class))
# file name
fname <- paste0('../data/GLWDv2/grids/GLWD_v2_delta_area_by_class_ha_tif/GLWD_v2_delta_area_by_class_ha/GLWD_v2_delta_class_', glwd2_class, '_ha_x10.tif')
# Append to stack
gwo_out <- c(gwo_out, rast(fname))
}
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T, cores=8)
gwo_out
plot(gwo_out)
# /----------------------------------------------------------------------------#
#/ Loop through GWO classes
for (gwo_class in unique(xwalk$gwo)){
print(gwo_class)
# Create empty output
gwo_out <- rast()
# Loop through GLWDv2 classes
for (glwd2_class in unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])){
print(paste0('  |-> ', glwd2_class))
# file name
fname <- paste0('../data/GLWDv2/grids/GLWD_v2_delta_area_by_class_ha_tif/GLWD_v2_delta_area_by_class_ha/GLWD_v2_delta_class_', glwd2_class, '_ha_x10.tif')
# Append to stack
gwo_out <- c(gwo_out, rast(fname))
}
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T, cores=8)
writeRaster(gwo_out,
paste0('../output/results/grids/GLWD_v2_delta_GWO_class_', gwo_class, '_ha_x10.tif'))
}
unique(xwalk$gwo)
# Read class xwalk
xwalk <-
read.csv('../data/GLWDv2/glwdv2_gwo_xwalk.csv') %>%
sort(gwo) %>%
# Add leading 0
mutate(gwo   = str_pad(gwo, width=2, pad = 0),
glwdv2= str_pad(glwdv2, width=2, pad = 0)) %>%
filter(!is.na(gwo))
# Read class xwalk
xwalk <-
read.csv('../data/GLWDv2/glwdv2_gwo_xwalk.csv') %>%
arrange(gwo) %>%
# Add leading 0
mutate(gwo   = str_pad(gwo, width=2, pad = 0),
glwdv2= str_pad(glwdv2, width=2, pad = 0)) %>%
filter(!is.na(gwo))
unique(xwalk$gwo)
# /----------------------------------------------------------------------------#
#/ Loop through GWO classes
for (gwo_class in unique(xwalk$gwo)){
print(gwo_class)
# Create empty output
gwo_out <- rast()
# Loop through GLWDv2 classes
for (glwd2_class in unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])){
print(paste0('  |-> ', glwd2_class))
# file name
fname <- paste0('../data/GLWDv2/grids/GLWD_v2_delta_area_by_class_ha_tif/GLWD_v2_delta_area_by_class_ha/GLWD_v2_delta_class_', glwd2_class, '_ha_x10.tif')
# Append to stack
gwo_out <- c(gwo_out, rast(fname))
}
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T, cores=8)
writeRaster(gwo_out,
paste0('../output/results/grids/GLWD_v2_delta_GWO_class_', gwo_class, '_ha_x10.tif'))
}
global(gwo_out, sum, na.rm=T)
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T, cores=8)
global(gwo_out, sum, na.rm=T)
gwo_class_area_df <- data.frame()
#
gwo_class_area_df <- bind_rows(gwo_class_area_df,
data.frame(gwo_class = gwo_class,
area_Mha = global(gwo_out, sum, na.rm=T)*10/10^6))
gwo_class_area_df
# Add global area to output df
gwo_class_area_df <- bind_rows(gwo_class_area_df,
data.frame(gwo_class = gwo_class,
area_Mha = global(gwo_out, sum, na.rm=T)*10/10^6))
gwo_class_area_df
gwo_class_area_df <- data.frame()
# /----------------------------------------------------------------------------#
#/ Loop through GWO classes
for (gwo_class in unique(xwalk$gwo)){
print(gwo_class)
# Create empty output
gwo_out <- rast()
# Loop through GLWDv2 classes
for (glwd2_class in unique(xwalk[xwalk$gwo==gwo_class,'glwdv2'])){
print(paste0('  |-> ', glwd2_class))
# file name
fname <- paste0('../data/GLWDv2/grids/GLWD_v2_delta_area_by_class_ha_tif/GLWD_v2_delta_area_by_class_ha/GLWD_v2_delta_class_', glwd2_class, '_ha_x10.tif')
# Append to stack
gwo_out <- c(gwo_out, rast(fname))
}
# sum all glwdv2 classes together
gwo_out <- app(gwo_out, sum, na.rm=T, cores=8)
writeRaster(gwo_out,
paste0('../output/results/grids/GLWD_v2_delta_GWO_class_', gwo_class, '_ha_x10.tif'))
# Add global area to output df
gwo_class_area_df <- bind_rows(gwo_class_area_df,
data.frame(gwo_class = gwo_class,
area_Mha = global(gwo_out, sum, na.rm=T)/10/10^6))
}
# Save area to file
write.csv(gwo_class_area_df, '../output/results/gwo_class_area.csv')
# /----------------------------------------------------------------------------#
#/   Save area to file
write.csv(gwo_class_area_df, '../output/results/gwo_class_area.csv')
gwo_class_area_df
# /----------------------------------------------------------------------------#
#/   Save area to file
write.csv(gwo_class_area_df, '../output/results/gwo_class_area.csv')
gwo_class_area_df <-
gwo_class_area_df %>%
mutate(sum = sum*0.01)
gwo_class_area_df
# Read class xwalk
xwalk <-
read.csv('../data/GLWDv2/glwdv2_gwo_xwalk.csv') %>%
arrange(gwo) %>%
# Add leading 0
mutate(gwo   = str_pad(gwo, width=2, pad = 0),
glwdv2= str_pad(glwdv2, width=2, pad = 0)) %>%
filter(!is.na(gwo))
xwalk
xwalk <-
read.csv('../data/GLWDv2/glwdv2_gwo_xwalk.csv')
xwalk
names(gwo_class_area_df) <- c('gwo_class','area_Mkm2')
write.csv(gwo_class_area_df, '../output/results/gwo_class_area.csv')
sum(gwo_class_area_df$area_Mkm2)
gwo_class_area_df <- read.csv('../output/results/gwo_class_area_wnames.csv')
gwo_class_area_df
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2))
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity')
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity') +
coord_flip()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('')
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity', color='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=area_Mkm2), stat='identity', fill='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=gwo_name, y=arrange(area_Mkm2)), stat='identity', fill='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
install.packages('forcats')
install.packages("forcats")
library(forcats)
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
####
gwo_class_area_df <- read.csv('../output/results/gwo_class_area_wnames.csv')
library(forcats)
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggsave('../output/figures/gwo_class_area.png',
# barplot_resev_perc,
width=90, height=80, dpi=400, units='mm' )
# PLOT AREA
gwo_class_area_df <- read.csv('../output/results/gwo_class_area_wnames.csv')
library(forcats)
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3') +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggsave('../output/figures/gwo_class_area.png',
# barplot_resev_perc,
width=90, height=80, dpi=400, units='mm' )
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3', width=0.3) +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_bw()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3', width=0.3) +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_minimal()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3', width=0.3) +
coord_flip() +
ylab('Area (million km^2)') +
xlab('') +
theme_classic()
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3', width=0.3) +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
ylab('Area (million km^2)') +
xlab('') +
theme_classic()
ggsave('../output/figures/gwo_class_area.png',
# barplot_resev_perc,
width=90, height=60, dpi=400, units='mm' )
ggplot(gwo_class_area_df) +
geom_bar(aes(x=fct_reorder(gwo_name, area_Mkm2), y=area_Mkm2), stat='identity', fill='blue3', width=0.6) +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
ylab('Area (million km^2)') +
xlab('') +
theme_classic()
ggsave('../output/figures/gwo_class_area.png',
# barplot_resev_perc,
width=90, height=55, dpi=400, units='mm' )
ggsave('../output/figures/gwo_class_area.png',
# barplot_resev_perc,
width=90, height=60, dpi=400, units='mm' )
library(terra)
?exactextract
?exactextractr
install.packages('exactextractr')
libarary(exactextract)
library(exactextract)
library(exactextractr)
library(sf)
library(here)
here()
# Get GLWDv2
glwdv2 <- rast('../output/results/glwdv2/GLWD_v2_delta_GWO_class_01_ha_x10.tif')
library(terra)
# Get GLWDv2
glwdv2 <- rast('../output/results/glwdv2/GLWD_v2_delta_GWO_class_01_ha_x10.tif')
glwdv2
# Get pixel area
pixarea_x10ha <- cellSize(glwdv2, unit='ha')*10
pixarea_x10ha
# Convert to percentage
glwdv2_prc <- glwdv2 / pixarea_x10ha
glwdv2_prc
glwdv2_prc[glwdv2_prc > 1] <- 1
glwdv2_prc
# Set threshold to sample SOC per class
# Remove pixels lower than threshold
glwdv2_prc[glwdv2_prc <= 0.5] <- NA
soc <- rast('../output/results/soilgrids2/soc_0-30cm_mean_500m.tif')
soc
glwdv2_prc
# Apply GLWDv2 mask to SOC raster
soc[is.na(glwdv2_prc)] <- NA
soc
# Convert pixels to dataframe of values
soc_class_df<- rasterToPoints(soc)
# Convert pixels to dataframe of values
soc_class_df<- as.data.frame(soc, na.rm=T)
# Convert pixels to dataframe of values
# soc_class_df<- as.data.frame(soc, na.rm=T)
soc_class_df<- values(soc)#, na.rm=T)
ext1 <- SpatExtent(-180, 0, -56, 84)
ext2 <- SpatExtent(0, 180, -56, 84)
ext1 <- ext(-180, 0, -56, 84)
ext2 <- ext(0, 180, -56, 84)
soc1 <- crop(soc, ext1, snap="near", extend=FALSE)
soc1
soc2 <- crop(soc, ext2, snap="near", extend=FALSE)
soc1_class_df
soc2
soc1_class_df<- as.data.frame(soc1, na.rm=T)
soc2_class_df<- as.data.frame(soc2, na.rm=T)
soc1_class_df
soc_class_df <- bind_rows(soc1_class_df, soc2_class_df)
library(tidyverse)
soc_class_df <- bind_rows(soc1_class_df, soc2_class_df)
soc_class_df
glimpse(soc_class_df)
gwo_class_list <- c('01','02','03','04','05','06','07','08','09')
class_string<- '01'
int(class_string)
as.numeric(class_string)
# /-----------------------------------------------------------------------------
#/
gwo_class_list <- c('01','02','03','04','05','06','07','08','09')
for (c in gwo_class_list){
print(c)
}
# /-----------------------------------------------------------------------------
#/
gwo_class_list <- c('01','02','03','04','05','06','07','08','09','16','19')
for (c in gwo_class_list){
print(c)
}
soc_df <- data.frame()
# /-----------------------------------------------------------------------------
#/
gwo_class_list <- c('01','02')#,'03','04','05','06','07','08','09','16','19')
soc_df <- data.frame()
get_soc_perclass <- function(class_string)
# Get GLWDv2
fname <- paste0('../output/results/glwdv2/GLWD_v2_delta_GWO_class_', class_string,'_ha_x10.tif')
glwdv2 <- rast(fname)
get_soc_perclass <- function(class_string)
# Get GLWDv2
fname <- paste0('../output/results/glwdv2/GLWD_v2_delta_GWO_class_', class_string,'_ha_x10.tif')
glwdv2 <- rast(fname)
get_soc_perclass(c)
get_soc_perclass(c)
a<-get_soc_perclass(c)
c
get_soc_perclass <- function(class_string)
# Get GLWDv2
fname <- paste0('../output/results/glwdv2/GLWD_v2_delta_GWO_class_', class_string,'_ha_x10.tif')
glwdv2 <- rast(fname)
# /-----------------------------------------------------------------------------
#/
gwo_class_list <- c('01','02')#,'03','04','05','06','07','08','09','16','19')
soc_df <- data.frame()
get_soc_perclass <- function(class_string){
# Get GLWDv2
fname <- paste0('../output/results/glwdv2/GLWD_v2_delta_GWO_class_', class_string,'_ha_x10.tif')
glwdv2 <- rast(fname)
# Get pixel area
pixarea_x10ha <- cellSize(glwdv2, unit='ha')*10
# Convert to percentage
glwdv2_prc <- glwdv2 / pixarea_x10ha
glwdv2_prc[glwdv2_prc > 1] <- 1
# Set threshold to sample SOC per class
# Remove pixels lower than threshold
# this way no two pixels can have the same value
glwdv2_prc[glwdv2_prc <= 0.5] <- NA
# Apply GLWDv2 mask to SOC raster
soc[is.na(glwdv2_prc)] <- NA
ext1 <- ext(-180, 0, -56, 84)
ext2 <- ext(0, 180, -56, 84)
soc1 <- crop(soc, ext1, snap="near", extend=FALSE)
soc2 <- crop(soc, ext2, snap="near", extend=FALSE)
soc1_class_df<- as.data.frame(soc1, na.rm=T)
soc2_class_df<- as.data.frame(soc2, na.rm=T)
soc_class_df <- bind_rows(soc1_class_df, soc2_class_df)
soc_class_df$gwo_class <- as.numeric(class_string)
return(soc_class_df)
}
gwo_class_list <- c('01','02')#,'03','04','05','06','07','08','09','16','19')
soc_df <- data.frame()
for (c in gwo_class_list){
print(c)
soc_df <- bind_rows(soc_df,
get_soc_perclass(c))
}
line_plot_theme <-
theme_bw() +
theme(
### ALL TEXT (inherited everywhere)
text = element_text(size=9, colour='black'),
### FACET STRIP
strip.text = element_text(size=9, face='bold',hjust= 0), #, vjust = -0.5),
strip.background = element_blank(),
### LEGEND
legend.text = element_text(size = 9),
legend.background = element_blank(),
legend.key.size = unit(4, "mm"),
legend.title=element_blank(),
#legend.position = 'top',
legend.direction = 'vertical',
legend.justification = "left",
### AXES
axis.line  = element_line(colour = "black", size=0.3),
axis.text  = element_text(size=7, colour='black'),
axis.ticks = element_line(colour='black', size=0.3),
### PANEL
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# panel.background = element_rect(fill=NA, colour = "black", size=0.1),
panel.spacing = unit(.05, "lines"),
panel.border = element_blank()) #rect(color = "black", fill = NA, size = 0.1))
glimpse(soc_df)
# Write to file
write.csv(soc_df, '../output/results/soilgrids2/soc_0-30cm_mean_perclass.csv')
#  Join the GWO class # and name
gwo_area <- read.csv('../output/results/gwo/gwo_class_area_wnames.csv')
gwo_area
glimpse(soc_df)
names(soc_df) <- c('soc_0_30cm_mean','gwo_class_num')
# Write to file
write.csv(soc_df, '../output/results/soilgrids2/soc_0-30cm_mean_perclass.csv')
?summarise_all
soc_df_perclass <-
soc_df %>%
group_by(gwo_class_num) %>%
summarise_all(.funs=list(min = min, mean=mean, max = max))
soc_df_perclass
# Summarize SOC values per class
soc_df_perclass <-
soc_df %>%
group_by(gwo_class_num) %>%
summarise_all(.funs=list(min = mina, mean=mean, max = max))
# Summarize SOC values per class
soc_df_perclass <-
soc_df %>%
group_by(gwo_class_num) %>%
summarise_all(.funs=list(soc_0_30cm_min = min, soc_0_30cm_mean=mean, soc_0_30cm_max = max))
#  Join the GWO class # and name
gwo_area <- read.csv('../output/results/gwo/gwo_class_area_wnames.csv')
?join
df <- left_join(soc_df_perclass, gwo_area, by='gwo_class_num')
soc_df_perclass
gwo_area
df <- left_join(soc_df_perclass, gwo_area, by='gwo_class_num')
#  Join the GWO class # and name
gwo_area <- read.csv('../output/results/gwo/gwo_class_area_wnames.csv')
df <- left_join(soc_df_perclass, gwo_area, by='gwo_class_num')
df
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_num, y=area_Mkm2)) +
line_plot_theme
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_num, y=area_Mkm2), stat='identity') +
line_plot_theme
df <- left_join(soc_df_perclass, gwo_area, by='gwo_class_num')
df
# Get theme
source('plot_themes.r')
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_num, y=area_Mkm2), stat='identity') +
line_plot_theme
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_num, y=area_Mkm2), stat='identity') +
line_plot_theme
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_name, y=area_Mkm2), stat='identity') +
line_plot_theme
#  Join the GWO class # and name
gwo_area <- read.csv('../output/results/gwo/gwo_class_area_wnames.csv')
df <- left_join(soc_df_perclass, gwo_area, by='gwo_class_num')
df
# Get theme
source('plot_themes.r')
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_name, y=area_Mkm2), stat='identity') +
line_plot_theme
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_name, y=area_Mkm2), stat='identity') +
coord_flip() +
line_plot_theme
# Barplot of area per GWO class
ggplot()+
geom_bar(data=df, aes(x=gwo_class_name, y=area_Mkm2), stat='identity') +
coord_flip() +
xlab('') +
line_plot_theme
library(ncdf4)
a <- nc_open('/Users/flue473/Downloads/GPP_past_Etienne_v2.nc')
a
